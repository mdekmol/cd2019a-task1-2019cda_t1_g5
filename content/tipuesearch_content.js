<<<<<<< HEAD
var tipuesearch = {"pages": [{'title': '簡介', 'text': 'CMSimfly ( https://github.com/chiamingyen/cmsimfly)  是一套簡單的網際內容管理系統, 採用 Flask 網際框架, 以 Beautifulsoup 解讀分頁內容. \n \n', 'tags': '', 'url': '簡介.html'}, {'title': '目錄結構', 'text': 'CMSimfly 的動態系統採用 Python3 + Flask 建構, 並且利用 Beatifulsoup 解讀位於 contig 目錄中的 content.htm 超文件檔案. \n content.htm 檔案可以透過動態系統中的 generate_pages 功能, 將超文件轉為位於 content 目錄中的個別頁面檔案. \n 動態系統與靜態系統則共用 downloads, images, static 等目錄, 其中 downloads 目錄存放在動態系統上傳的文件檔, 而 images 目錄則存放動態系統所上傳的影像檔案, 包括 jpg, png 與 gif 等格式圖檔. \n static 目錄則存放在動態與靜態系統所需要的 Javascript 或 Brython 程式檔. \n', 'tags': '', 'url': '目錄結構.html'}, {'title': '頁面編輯', 'text': 'CMSimfly 動態系統的網際編輯器採用  TinyMCE4 , 可以放入一般超文件,\xa0 納入圖檔, 嵌入影片連結, 並且加入帶有行數的原始碼. \n 透過 File Upload 功能, 可以一次上傳多個檔案,\xa0 存入 downloads 目錄中儲存, 之後各頁面可以引入對應連結. \n 而圖檔的上傳與引用與一般檔案類似, 但上傳後存入 images 目錄中. \n', 'tags': '', 'url': '頁面編輯.html'}, {'title': '插入程式碼', 'text': 'CMSimfly 目前使用 Syntaxhighlighter 3.0.83: \n \xa0 http://alexgorbatchev.com/SyntaxHighlighter/ \xa0 \n 進行頁面中的程式碼高亮顯示. \n', 'tags': '', 'url': '插入程式碼.html'}, {'title': 'Java 程式碼', 'text': 'import java.util.Scanner;\n\npublic class Life {\n    public static void show(boolean[][] grid){\n        String s = "";\n        for(boolean[] row : grid){\n            for(boolean val : row)\n                if(val)\n                    s += "*";\n                else\n                    s += ".";\n            s += "\\n";\n        }\n        System.out.println(s);\n    }\n    \n    public static boolean[][] gen(){\n        boolean[][] grid = new boolean[10][10];\n        for(int r = 0; r < 10; r++)\n            for(int c = 0; c < 10; c++)\n                if( Math.random() > 0.7 )\n                    grid[r][c] = true;\n        return grid;\n    }\n    \n    public static void main(String[] args){\n        boolean[][] world = gen();\n        show(world);\n        System.out.println();\n        world = nextGen(world);\n        show(world);\n        Scanner s = new Scanner(System.in);\n        while(s.nextLine().length() == 0){\n            System.out.println();\n            world = nextGen(world);\n            show(world);\n            \n        }\n    }\n    \n    public static boolean[][] nextGen(boolean[][] world){\n        boolean[][] newWorld \n            = new boolean[world.length][world[0].length];\n        int num;\n        for(int r = 0; r < world.length; r++){\n            for(int c = 0; c < world[0].length; c++){\n                num = numNeighbors(world, r, c);\n                if( occupiedNext(num, world[r][c]) )\n                    newWorld[r][c] = true;\n            }\n        }\n        return newWorld;\n    }\n    \n    public static boolean occupiedNext(int numNeighbors, boolean occupied){\n        if( occupied && (numNeighbors == 2 || numNeighbors == 3))\n            return true;\n        else if (!occupied && numNeighbors == 3)\n            return true;\n        else\n            return false;\n    }\n\n    private static int numNeighbors(boolean[][] world, int row, int col) {\n        int num = world[row][col] ? -1 : 0;\n        for(int r = row - 1; r <= row + 1; r++)\n            for(int c = col - 1; c <= col + 1; c++)\n                if( inbounds(world, r, c) && world[r][c] )\n                    num++;\n\n        return num;\n    }\n\n    private static boolean inbounds(boolean[][] world, int r, int c) {\n        return r >= 0 && r < world.length && c >= 0 &&\n        c < world[0].length;\n    }\n\n} \n \n', 'tags': '', 'url': 'Java 程式碼.html'}, {'title': 'Python 程式碼', 'text': 'def parse_content():\n    """use bs4 and re module functions to parse content.htm"""\n    #from pybean import Store, SQLiteWriter\n    # if no content.db, create database file with cms table\n    \'\'\'\n    if not os.path.isfile(config_dir+"content.db"):\n        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))\n        cms = library.new("cms")\n        cms.follow = 0\n        cms.title = "head 1"\n        cms.content = "content 1"\n        cms.memo = "first memo"\n        library.save(cms)\n        library.commit()\n    \'\'\'\n    # if no content.htm, generate a head 1 and content 1 file\n    if not os.path.isfile(config_dir+"content.htm"):\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n    subject = file_get_contents(config_dir+"content.htm")\n    # deal with content without content\n    if subject == "":\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n        subject = "<h1>head 1</h1>content 1"\n    # initialize the return lists\n    head_list = []\n    level_list = []\n    page_list = []\n    # make the soup out of the html content\n    soup = bs4.BeautifulSoup(subject, \'html.parser\')\n    # 嘗試解讀各種情況下的標題\n    soup = _remove_h123_attrs(soup)\n    # 改寫 content.htm 後重新取 subject\n    with open(config_dir + "content.htm", "wb") as f:\n        f.write(soup.encode("utf-8"))\n    subject = file_get_contents(config_dir+"content.htm")\n    # get all h1, h2, h3 tags into list\n    htag= soup.find_all([\'h1\', \'h2\', \'h3\'])\n    n = len(htag)\n    # get the page content to split subject using each h tag\n    temp_data = subject.split(str(htag[0]))\n    if len(temp_data) > 2:\n        subject = str(htag[0]).join(temp_data[1:])\n    else:\n        subject = temp_data[1]\n    if n >1:\n            # i from 1 to i-1\n            for i in range(1, len(htag)):\n                head_list.append(htag[i-1].text.strip())\n                # use name attribute of h* tag to get h1, h2 or h3\n                # the number of h1, h2 or h3 is the level of page menu\n                level_list.append(htag[i-1].name[1])\n                temp_data = subject.split(str(htag[i]))\n                if len(temp_data) > 2:\n                    subject = str(htag[i]).join(temp_data[1:])\n                else:\n                    subject = temp_data[1]\n                # cut the other page content out of htag from 1 to i-1\n                cut = temp_data[0]\n                # add the page content\n                page_list.append(cut)\n    # last i\n    # add the last page title\n    head_list.append(htag[n-1].text.strip())\n    # add the last level\n    level_list.append(htag[n-1].name[1])\n    temp_data = subject.split(str(htag[n-1]))\n    # the last subject\n    subject = temp_data[0]\n    # cut the last page content out\n    cut = temp_data[0]\n    # the last page content\n    page_list.append(cut)\n    return head_list, level_list, page_list\n\n \n \n', 'tags': '', 'url': 'Python 程式碼.html'}, {'title': 'C或C++程式碼', 'text': '請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為\xa0 "C/C++程式碼", 則無法進行分頁. \n /* Runge Kutta for a set of first order differential equations */\n \n#include <stdio.h>\n#include <math.h>\n \n#define N 2 /* number of first order equations */\n#define dist 0.1 /* stepsize in t*/\n#define MAX 30.0 /* max for t */\n \nFILE *output; /* internal filename */\nFILE *output1; /* internal filename */\n// 利用 pipe 呼叫 gnuplot 繪圖\nFILE *pipe;\n \nvoid runge4(double x, double y[], double step); /* Runge-Kutta function */\ndouble f(double x, double y[], int i); /* function for derivatives */\n \nvoid main(){\n \n  double t, y[N];\n  int j;\n \n  output=fopen("osc.dat", "w"); /* external filename */\n  output1=fopen("osc1.dat", "w"); /* external filename */\n \n  y[0]=1.0; /* initial position */\n  y[1]=0.0; /* initial velocity */\n \n  //fprintf(output, "0\\t%f\\n", y[0]);\n \n  for (j=1; j*dist<=MAX ;j++) /* time loop */{\n \n    t=j*dist;\n    runge4(t, y, dist);\n    fprintf(output, "%f\\t%f\\n", t, y[0]);\n    fprintf(output1, "%f\\t%f\\n", t, y[1]);\n  }\n \n  fclose(output);\n  fclose(output1);\n \n  pipe = popen("gnuplot -persist","w");\n  //fprintf(pipe,"set term png enhanced font \\"v:/fireflysung.ttf\\" 18 \\n");\n  fprintf(pipe,"set term png enhanced font \\"y:/wqy-microhei.ttc\\" 18 \\n");\n  //fprintf(pipe,"set yrange [68:70]\\n");\n  fprintf(pipe,"set output \\"test.png\\"\\n");\n  fprintf(pipe, "plot \\"osc.dat\\" title \\"位移\\" with lines, \\"osc1.dat\\" title \\"速度\\" with lines\\n");\n  fprintf(pipe,"quit\\n");\n\n  fprintf(pipe,"quit\\n");\n  pclose(pipe);\n}\n \nvoid runge4(double x, double y[], double step){\n \n  double h=step/2.0, /* the midpoint */\n  t1[N], t2[N], t3[N], /* temporary storage arrays */\n  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */\n  int i;\n \n  for (i=0;i<N;i++){\n \n    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    k4[i]= step*f(x+step, t3, i);\n  }\n \n  for (i=0;i<N;i++){\n \n    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;\n  }\n}\n \ndouble f(double x, double y[], int i){\n \n  if (i==0)\n    x=y[1]; /* derivative of first equation */\n  if (i==1)\n    x=-y[0]-0.5*y[1];\n  return x;\n} \n \n', 'tags': '', 'url': 'C或C++程式碼.html'}, {'title': 'Lua 程式碼', 'text': '-- 導入 js 模組\njs = require("js")\n-- 取得 window\nwindow = js.global\n-- 猜小於或等於 n 的整數\nbig = 100\n-- 計算猜測次數, 配合 while 至少會猜一次\nnum = 1\n-- 利用 window:prompt 方法回應取得使用者所猜的整數\nguess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")\n-- 利用數學模組的 random 函數以亂數產生答案\nanswer = math.random(big)\noutput = ""\n-- 若沒猜對, 一直猜到對為止\nwhile answer ~= tonumber(guess) do\n    if answer > tonumber(guess) then\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"\n        print(output)\n    else\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"\n        print(output)\n    end \n    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")\n    num = num + 1\nend\nprint("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")\n     \n \n', 'tags': '', 'url': 'Lua 程式碼.html'}, {'title': 'Javascript 程式碼', 'text': 'STLViewer = function(stlpath, plotarea) {\n\n\tvar mycanvas = document.getElementById(plotarea);\n\tvar viewer = new JSC3D.Viewer(mycanvas)\n\tvar theScene = new JSC3D.Scene;\n\t////Initialize with a default file:\n\t//var stlpath = "../../../assets/2013-10-23/stl/box.STL"\n\t//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"\n\tviewer.setParameter(\'SceneUrl\', stlpath);\n    viewer.setParameter(\'InitRotationX\', 20);\n\tviewer.setParameter(\'InitRotationY\', 20);\n\tviewer.setParameter(\'InitRotationZ\', 0);\n\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\tviewer.init();\n\tviewer.update();\n\t////init done\n\tvar canvas_drop = document.getElementById(\'canvas-drop\')\n\t/*var dropzone = document.getElementById(\'dropzone\')\n\tdropzone.addEventListener(\'dragover\', handleDragOver, false);\n\tdropzone.addEventListener(\'drop\', handleFileSelect, false); */\n\tcanvas_drop.addEventListener(\'dragover\', handleDragOver, false);\n\tcanvas_drop.addEventListener(\'drop\', handleFileSelect, false);\n\n////Drag and drop logic:\n\tfunction handleFileSelect(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    var files = evt.dataTransfer.files;\n\t    console.log(evt)\n\t    console.log(files)\n\t    preview_stl(files[0])\n\t  }\n\n\t  function handleDragOver(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    evt.dataTransfer.dropEffect = \'copy\';\n\t  }\n\n////jsc3d logic\n\tvar handle_file_select = function(e) {\n\t\te.stopPropagation()\n\t\te.preventDefault()\n\t\tvar f = e.target.files[0]\n\t\tpreview_stl(f)\n\t}\n\n\tfunction preview_stl(f) {\n\t\tvar reader = new FileReader()\n\t\tvar ext = f.name.split(".")[1]\n\n\t\tfunction setup_viewer() {\n\t\t\tviewer.setParameter(\'InitRotationX\', 20);\n\t\t\tviewer.setParameter(\'InitRotationY\', 20);\n\t\t\tviewer.setParameter(\'InitRotationZ\', 0);\n\t\t\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\t\t\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\t\t\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\t\t\tviewer.setParameter(\'RenderMode\', "flat");\n\t\t}\n\t\tsetup_viewer()\n\n\t\treader.onload = (function(file) {\n\t\t\treturn function(e) {\n\t\t\t\ttheScene = new JSC3D.Scene\n\t\t    \tstl_loader = new JSC3D.StlLoader()\n\t\t    \tstl_loader.parseStl(theScene, e.target.result)\n\t\t      \t//viewer.init()\n\t\t      \tviewer.replaceScene(theScene)\n\t\t      \tviewer.update()\n\t\t      \tconsole.log("file reader onload")\n\t\t\t}\n\t\t})(f)\n\n\t\tif (ext.toLowerCase() != "stl") {\n\t\t\talert("That doesn\'t appear to be an STL file.");\n\t\t} else {\n\t\t\treader.readAsBinaryString(f)\n\t\t}\n\t}\n}\n \n \n', 'tags': '', 'url': 'Javascript 程式碼.html'}, {'title': 'Html 原始碼', 'text': '<html>\n   <head>\n      <meta http-equiv="content-type" content="text/html;charset=utf-8">\n      <title>CMSimfly</title>\n      <link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n   </head>\n   <body>\n      <div class=\'container\'>\n      <nav>\n         <ul id=\'css3menu1\' class=\'topmenu\'>\n            <li><a href=\'/get_page/簡介\'>簡介</a>\n            <li><a href=\'/get_page/目錄結構\'>目錄結構</a>\n            <li>\n               <a href=\'/get_page/頁面編輯\'>頁面編輯</a>\n               <ul>\n                  <li>\n                     <a href=\'/get_page/插入程式碼\'>插入程式碼</a>\n                     <ul>\n                        <li><a href=\'/get_page/Java 程式碼\'>Java 程式碼</a>\n                        <li><a href=\'/get_page/Python 程式碼\'>Python 程式碼</a>\n                        <li><a href=\'/get_page/C或C++程式碼\'>C或C++程式碼</a>\n                        <li><a href=\'/get_page/Lua 程式碼\'>Lua 程式碼</a>\n                        <li><a href=\'/get_page/Javascript 程式碼\'>Javascript 程式碼</a>\n                        <li><a href=\'/get_page/Html 原始碼\'>Html 原始碼</a></li>\n                        </li>\n                     </ul>\n               </ul>\n            <li><a href=\'/get_page/網際簡報\'>網際簡報</a>\n            <li><a href=\'/get_page/網誌編輯\'>網誌編輯</a>\n            <li><a href=\'/get_page/已知錯誤\'>已知錯誤</a></li>\n         </ul>\n      </nav>\n      <section>\n         <form method=\'post\' action=\'/ssavePage\'>\n         <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'><h3>Html 原始碼</h3></textarea>\n         <input type=\'hidden\' name=\'page_order\' value=\'9\'>\n         <input type=\'submit\' value=\'save\'>\n         <input type=button onClick="location.href=\'/get_page/Html 原始碼\'" value=\'viewpage\'>\n         </form>\n      </section>\n   </body>\n</html>\nCOPY TO CLIPBOARD\t \n \n', 'tags': '', 'url': 'Html 原始碼.html'}, {'title': '網際簡報', 'text': 'CMSimfly 中採用  Reveal.js  作為網際簡報, 其中的維護檔案位於 config/reveal.js, 而對應的簡報檔案則位於 reveal 目錄中. \n', 'tags': '', 'url': '網際簡報.html'}, {'title': '網誌編輯', 'text': 'CMSimfly 採用  Pelican blog  系統, 編輯檔案位於 config/pelican.leo, 對應的 \n \xa0Markdown 原始檔案位於 markdown 目錄中, 而經 Pelican 轉換出的網誌超文件檔案則位於 blog 目錄中. \n 執行 Pelican 之前, 必須先安裝下列模組: \n pip install pelican Markdown \n 其餘在網誌文章中所需要的 Javascript 或 Brython 程式檔案, 則與 CMSimfly 及 Reveal.js 共用, 位於 static 目錄下. \n 上傳檔案與圖檔的引用則與 CMSimfly 架構相同. \n', 'tags': '', 'url': '網誌編輯.html'}, {'title': '已知錯誤', 'text': '插入圖檔連結 \n \n 全部頁面會因無法正確解讀而誤刪 \n 在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理. \n 頁面標題不支援特殊符號 \n 各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能. \n Video 引用不支援內部引用 \n tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結. \n', 'tags': '', 'url': '已知錯誤.html'}, {'title': '個人操作影片', 'text': '建立SSH.key-操作步驟 \xa0 Fork的管理 \xa0 \xa0 \xa0 重新安裝Virtualbox配置設定 \n \xa0 \xa0 \xa0 網路連線配置設定 \n \n \n', 'tags': '', 'url': '個人操作影片.html'}, {'title': '期末報告影片', 'text': '', 'tags': '', 'url': '期末報告影片.html'}]};
=======
var tipuesearch = {"pages": [{'title': 'Home', 'text': '組長: \n 40623134\xa0紀冠瑋 \n 組員: \n 40623153  廖祥佑 \n 40423111  吳承翰 \n 40623138 \xa0黃柏諺 \n 40623154  黃馨慧 \n 40423214  李奇軒 \n 40623131 周紹叡 \n 40623114 吳信億 \n 40423159  張惟珉 \n 40423142  黃興煜 \n', 'tags': '', 'url': 'Home.html'}, {'title': '規劃執行', 'text': '', 'tags': '', 'url': '規劃執行.html'}, {'title': '手足球系統模擬', 'text': '專案執行成員 \n 組長: \n 40623134 紀冠瑋 \n 組員: \n 40623153 廖祥佑、40423111 吳承翰 \n 40623138 黃柏諺、40623154 黃馨慧 \n 40423214 李奇軒、40623131 周紹叡 \n 40623114 吳信億、40423159 張惟珉 \n 40423142 黃興煜 \n 專案執行內容 \n 零組件尺寸分析 (40623154 ) \n 手足球系統模擬 (40423214 、40623138 ) \n 參數設計與繪圖 (40623154、40423142 ) \n 送球機構設計與模擬 ( 40623134、40423214 ) \n 期末簡報製作 (40623131、40423142 、40623153) \n 專案成果摘要 \n 能夠利用V-rep來執行手足球的動作，包含用按鍵控制球員的移動，電腦偵測球的位置讓球員自動移動，還有利用回球機構完成讓球進洞後可以回到場上。 \n 專案執行動機 \n 相關文獻探討 \n 執行使用套件 \n Onshape、V-rep、SolidWorks、Python \n 專案執行過程規劃 \n 4/22~4/28(第十週) \n 分配工作 \n 手足球設計構想初稿 \n 4/29~5/5(第十一週) \n 零件尺寸分析評估 \n 設計零件(球員、球桌) \n 導入Onshape \n 5/6~5/12(第十二週) \n 人與人對打程式設計編譯 \n 5/13~5/19(第十三週) \n 設計繪製回球機構 \n 模擬回球機構的動態 \n 修改程式錯誤 \n 5/20~5/26(第十四週) \n 更改回球機構的瑕疵 \n 確認成功模擬回球機構動態 \n 5/27~6/2(第十五週) \n 將回球機構與本體連結 \n 將電腦與電腦對打程式導入Vrep \n 6/3~6/9(第十六週) \n 將報告書與簡報完成 \n 報告影片完成 \n 專案結論 \n', 'tags': '', 'url': '手足球系統模擬.html'}, {'title': '設計與繪圖', 'text': '', 'tags': '', 'url': '設計與繪圖.html'}, {'title': '零組件尺寸分析', 'text': '1.球桌 \n 我們是參考 火球國際公開賽桌 球場的規格做基準，基本上對尺寸做了一點微調。 \n 增加為了讓回球機構能運作的平面，且球門前的球員行程並沒有想像中的寬，故在角落處增加圓弧面。 \n \n 2.球員 \n 外型依照老師提供的造型作為使用，我們將孔洞放大便於組合與安裝。 \n \n 3.球桿 \n 參考 火球國際公開賽桌 將球桿分為一、二、三、五人，桿上突起部位為安裝球員處。 \n 單人、雙人桿在末端都向外延伸了一個10mm的圓柱，用來限制球員的行程和防止球桿從孔洞掉落。 \n \n 三人、五人桿因為安裝球員處的圓柱能達到限制形成的效果，所以並沒有向外延伸圓柱。 \n \n 4.圓盤 \n 這是剛開始使用的回球機構的圓盤。 \n \n 因為球會卡在球道末端而修改了錐形孔的圓心位置和圓盤大小及厚度。 \n \n \n 5.握把 \n 依照 火球國際公開賽桌 的握把去抓尺寸而繪製的樣子，但我們並沒有繪製銷孔和銷，只是單純利用塑膠可壓縮性而配合上去的。 \n \n 6.球道 \n 剛開始設計出來的球道模型。 \n \n 球道的入口處因球道入口處太小，有機會進不了入口或彈出，因為入口處地板是平面所以球有機會停在此處。 \n \n 出口處平面部分過長，球有機會停置於此處。 \n \n 修改後的整體圖 \n \n 修改後的入口處地板採用斜面、且入口增大，解決了入口卡球的問題。 \n \n 出口修改為斜面到底，且增加圓弧面更容易讓球滾入圓盤。 \n \n 7.套筒 \n 為了讓球桿方便安裝，原本的孔洞與球桿設定為直徑15mm，但桿上的球員安裝處為直徑20mm，故將球桌的孔洞從15mm改為20mm，使球桿穿過孔洞之後安裝套筒就能使球桿固定於孔上也不會有安裝不便的問題。 \n \n', 'tags': '', 'url': '零組件尺寸分析.html'}, {'title': '參數設計與繪圖', 'text': '手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖) \n Onshape 零組件連結 \n 球檯與球道 \n \n 送球機構 - 圓盤 \n \n \n 銷 (固定) \n \n 套筒(固定球桿) \n \n 球員 \n \n 球桿(單人) \n \n 球桿(雙人) \n \n 球桿(三人) \n \n 球桿(五人) \n \n 把手 \n \n 組合 \n \n \n 組合影片 \n \n', 'tags': '', 'url': '參數設計與繪圖.html'}, {'title': '細部設計與 BOM', 'text': '完成手足球零組件細部設計 (可參考 \xa0 https://youtu.be/PgnvZV5s13c \xa0 中各項設計), 並將設計 BOM (Bill of Materials) 納入 CMSimfly 網際內容管理系統. (系統 BOM 文件整理) \n \n \n 參考資料: \n \n 手足球零件格式說明 \n 手足球零件格式說明 \n \n 零件BOM \n 手足球零組件材料表 (含零組件下載連結) \n \n 零件尺寸圖 \n 零件尺寸圖 \n \n \n \n \n 零件部分組裝圖 \n 零件部分組裝圖 \n 球檯、球道、送球機構(圓盤) \n \n 球桿、球員、把手 \n \n 套筒 \n \n 零件部分組裝影片 \n \n \n \n 3D 零組件爆炸圖 \n \n 3D 零組件爆炸圖 \n \n \n \n \n \n', 'tags': '', 'url': '細部設計與 BOM.html'}, {'title': 'V-rep 動態模擬', 'text': '手足球系統中各球員擊球與操控桿移動旋轉的 V-rep 動態模擬 (系統功能模擬) \n 以文字及操作影片說明如何從 Onshape 設計繪製零組件後, 如何轉入 V-rep, 如何編寫程式, 如何進行各種功能測試, 最後完成手足球的 V-rep 動態模擬系統. \n', 'tags': '', 'url': 'V-rep 動態模擬.html'}, {'title': '送球機構設計與模擬', 'text': '手足球發球與進球後自動送球機構設計與 V-rep 動態模擬 (機構與傳動系統設計與模擬) \n 送球機構零件 :\xa0 \n 1.送球球道 \n \n 2.送球圓盤 \n \n 3.轉軸 \n \n 4.送球機構圖 \n \n \n 以下為參考機構模擬影片: \n', 'tags': '', 'url': '送球機構設計與模擬.html'}, {'title': '送球機構BUG修改', 'text': '1 . 球道-龍門口 \n 最初設計 : \n \xa0\xa0  \n BUG :球進了龍門口卻進不了球道 \n \n 改良後 : \n \n \n 就算是有角度的進球也能順利滾進球道 \n \n \n 2 . 球道尾 \n 最初設計 : \n \n 斜面角度不夠，足球會來回滾動，無法順利滾進轉盤 \n \n 改良後 : \n 增加斜面角度以及開口弧線曲率 \n \n 改良後球能很穩定的靠著圓盤，等待圓盤將球送回球場上 \n \n \n \n', 'tags': '', 'url': '送球機構BUG修改.html'}, {'title': '系統功能展示', 'text': '手足球模擬系統功能展示 (模擬展示與說明影片) \n 利用Python程式導入Vrep，讓手足球可以一邊自動控制，一邊手動操作 ，進行對打 \n \n 利用Python程式導入Vrep，讓手足球可以兩邊手動操作，進行對打 \n \n 利用Python程式導入Vrep，讓手足球都是自動操作，完成電腦與電腦的對打 \n \n 兩邊手足球能夠手動控制之後，加入回球機構，使球在進球之後能夠能夠自動回到場上 \n \n 以下提供所完成的 V-rep 系統模擬影片與相關檔案下載連結 \n 從Onshape匯入到V-rep開始，包含設定軸、位置、動力，程式匯入完成的 人與人對打 \n 40623138 \n \n 40623154 \n \n 從Onshape匯入到V-rep開始，包含設定軸、位置、動力，程式匯入完成的 人機對打 \n 40623138 \n \n 40623154 \n \n 從Onshape匯入到V-rep開始，包含設定軸、位置、動力，程式匯入完成的 電腦與電腦對打 \n 40623154 \n \n 40423142 \n https://drive.google.com/drive/folders/1KPjBXd0cU-HW5KkSU1msodYu0RLC8NHb?usp=sharing \n \n 40623131 \n https://drive.google.com/drive/folders/1GzVVVbaavH6S-PiQylOK9B0sGd5lx3x5?usp=sharing \n', 'tags': '', 'url': '系統功能展示.html'}, {'title': '結案報告', 'text': '', 'tags': '', 'url': '結案報告.html'}, {'title': '專案口頭簡報', 'text': '各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報) \n', 'tags': '', 'url': '專案口頭簡報.html'}, {'title': '專案報告書', 'text': '各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書) \n ./../downloads/協同產品設計實習.pdf \n', 'tags': '', 'url': '專案報告書.html'}, {'title': '第十週', 'text': '\n \n', 'tags': '', 'url': '第十週.html'}, {'title': '課程內容', 'text': '\n', 'tags': '', 'url': '課程內容.html'}, {'title': '實習任務一', 'text': '可攜式系統 \n \n 自製可攜式系統 \n 下載 Python 3.7.2 \n \n 安裝 Python 3.7.2 \n \n \n \n 下載 SciTE \n \n 可比較檔案的工具\xa0KDiff3 \n \n 可攜式程式編輯與認識 \n 的start.bat \n \n stop.bat且 \n \n 尋找或編譯分組程式進行分組 \n \n 可攜式影片 \n 40623138的可攜式影片 \n \n 40623153可攜系統影片 \n \n 40423111可攜系統影片 \n 40423159 可攜系統影片 \n \n \n \n \n ssh鍵 \n 關閉彈出的登入窗 \n 開啟start.bat後輸入\xa0 git config --edit --system \n 開啟編輯器，編輯git的設定 \n 使用按鍵H/J/K/L控制方向，之後按a進入編輯模式 \n 就可以按Backspace刪除最後一行 \n 如下 \n \n 刪除後按Esc鍵離開編輯模式 \n 輸入2個冒號後，再輸入wq存檔並關閉即可 \n 直接離開則輸入exit即可退出 \n 在可攜系統的程式視窗輸入sh (可至y:\\git\\bin中確認) \n 執行 git 的 shell並輸入(ssh-keygen -t rsa -b 4096 -C "This is my key") \n 將會建立Private 與 Public金鑰至y:\\home\\.ssh\\id_rsa與id_rsa.pub將 id_rsa.pub 的內容複製貼上至Github 帳號的Settings \n 如下 \n \n 在SSH and GPG keys的SSH Key點擊new ssh key並貼上所複製的內容 \n \n 利用ssh提交推送 \n 首先要確認倉儲是以ssh的方式clone \n 利用以下指令clone \n git clone\xa0git@github.com:(mdekmol/github分組網址) \n 或直接使用SciTE編輯器開啟個人倉儲的.git檔案裡面的config檔案 \n 把url = https://github.com/ ( mdekmol/github分組網址) \n 改成url = git@github.com: ( mdekmol/github分組網址) \n 完成後直接提交推送即可不用打帳號密碼就能push。 \n \n', 'tags': '', 'url': '實習任務一.html'}, {'title': '實習任務二', 'text': 'Onshape及V-rep操作練習 \n BubbleRob tutorial \n 操作步驟 : \n 1. \n 依照路徑[Menu bar --> Add --> Primitive shape --> Sphere]新增一個直徑為 : 0.2 m的球體，記得檢查" Create dynamic and respondable shape "是有被勾選的。 \n \n 2. \n 按下ok後，球體便會新增在畫面中，為測試球體是可以調整參數以及可以作動的，<control-space>開始模擬，<control-c>複製球體後再按<control-v>會看到兩球體相撞後各自滾開，驗證此球體是可以作動的。 \n 3. \n 停止模擬，雙擊球體，打開編輯視窗，將 Collidable,   Measurable,   Renderable  and  Detectable  選項勾選 \n \n 4. \n 接著，點選球體，打開位置視窗，切換到 translation ，在Z軸上打上0.02，確定 Relative to 是在 World  後，點擊 Translate selection ，球體就會往上0.02 m \n \n 5. \n [Menu bar --> Add --> Proximity sensor --> Cone type]新增距離感測器，打開方向視窗，切換到Rotation，在Y.Z軸打上90度，按下確定將感測器轉至側邊。 \n \n 6. \n 打開位置視窗，在X及Z軸輸入0.1及0.12將感測器對準球體中心 \n \n 7. \n 雙擊感測器圖示，進到編輯視窗，點擊 Show volume parameter 按鈕，輸入數據如下: \n Offset  : 0.005 \n Angle  : 30\xa0 \n Range  : 0.15 \n 完成後關閉此視窗，點擊 Show detection parameters 按鈕，取消 Don\'t allow detections if distance smaller than 的勾勾。 \n 8. \n 選取球體及感測器[Menu bar --> Edit --> Make last selected object parent] \n 會變成這樣: \n \n 9. \n \xa0[Menu bar --> File --> New scene]新增一個場景之後，新增一個（0.08,0.08,0.02）的圓柱體 \n \n 10. \n 選擇主體檢查一次步驟三的勾選，之後更改主體的 絕對位置 及 絕對方向 ，改完後複製一個副本將絕對位置Y座標設 -0.1 \n \n \n \xa011. \n 將兩個做好的輪子複製，回原本場景貼上。 \n 再來要做接頭 [Menu bar --> Add --> Joint --> Revolute]，保持選擇的接頭再選擇左輪，在位置對話框點擊\xa0 Apply to selection\xa0 ，在方向對話框點擊\xa0 Apply to selection\xa0 ；右輪的設定重複一次設定左輪的方式。設定完的圖示如下，接頭會定位在輪子中心 \n \n 12. \n 在新場景建立一個直徑0.05的球體(滑塊)，一樣讓它具有\xa0 Collidable，Measurable，Renderable和Detectable\xa0 ，[Menu bar --> Add --> Force sensor]添加一個力傳感器並向上移動0.05，將滑塊連接到力傳感器，將兩個物體複製回原場景並沿X軸移動 -0.07連到機器人本體。 \n \n 13. \n 選擇兩個輪子和滑塊，在形狀動態對話框中點擊三次 M = M * 2 \n \n 14. \n [Menu bar --> Tools --> Collections] 打開集合對話框，點 Add new collection\xa0 ，選擇新的集合項目為bubbleRob，點  Add\xa0 ，幫它改名為\xa0 bubbleRob_collection 。 \n \n 15. \n [Menu bar --> Tools --> Calculation module properties]打開計算模塊屬性對話框，點 Add new distance object ，選擇新的集合項目 bubbleRob_collection ，重命名為 bubbleRob_distance。 \n \n 16. \n 這時我們按下開始模擬，並不會看到有任何改變，但實際上小汽車上的感測器已經開始感測小汽車與可備感測物體之間的最小距離，但問題是畫面中並無可備感測的物體，因此在下一步驟我們要新增可備感測的物體。 \n 17. \n 這一步要新增一個用來顯示物體與小汽車距離的圖表， [Menu bar --> Add --> Graph] ，新增後將之改名為" bubbleRob_graph "，將graph拉到 bubbleRob 底下並設定graph的位置再(0，0，0.005) \n 18. \n 接下來雙擊 bubbleRob_graph ，取消打勾" Display XYZ-planes "然後點擊 Add new data stream to record \n Data stream type\xa0 :\xa0  absolute x-position \n   Object / item to record \xa0 : \xa0 bubbleRob_graph \n bubbleRob_graph\'s  absolute x-coordinate 便會出現在  Data stream recording list 裡面，照上述步驟新增y跟z，會長這樣 : \n \n 19. \n 在來設置3D 的曲獻，顯示小汽車的行走軌跡，點擊 Edit 3D curves， 接著點 Add new curve ，在對話框哩，如下設定 :  \n \xa0 X-value :  bubbleRob_x_pos \n   Y-value :\xa0 bubbleRob_y_pos   \n Z-value :\xa0  bubbleRob_z_pos   \n 設定好之後，在最底下 \n 點選  Relative to world  以及設定  Curve width  為 4 \n \n 20. \n 這步驟要新增障礙物，新增primitive cylinder，尺寸為(0.1，0.1，0.2)，並解將這些選項打勾  Collidable ,  Measurable ,  Renderable,    Detectable \n 複製這些圓柱，將小汽車圍住即可。 \n 21. \n 雙擊 bubbleRob ， 切換到common然後勾選 Object is model base  與 Object/model can transfer or accept DNA  ，完成後再把兩個轉軸(Joint)隱藏 \n 22. \n [Menu bar --> Add --> Vision sensor --> Perspective type]\xa0 來打開\xa0 vision sensor  ，將 position and orientation 設置為 (0,0,0)，再來將 Far clipping plane\xa0 設置為1， Resolution X / Y\xa0 設置為 256 / 256\xa0 \n \n 23. \n 進入\xa0 Show filter dialog  ， 選擇\xa0 Edge detection on work image\xa0 然後點\xa0 Add filter\xa0 來新增，並按旁邊向上的箭頭讓他跑到中間，然後點兩下來改\xa0 Threshold\xa0= 0.2\xa0\xa0 。 \n \n \n 24. \n 在 \xa0 scene  上 右鍵  add floating view  ，然後在浮動視窗上面 選 view >\xa0Associate view with selected vision sensor ，就可以模擬了。 \n \n 25. \n 點場景層次結構中bubbleRob名稱旁邊出現的小腳本圖標，複製以下代碼貼到腳本編輯器，就完成了。 \n 貼完如果模擬時只會往前衝不會反彈，可以檢查部件的名稱與程式碼裡的名稱是否一樣。 \n \n 手足球 \n 版本一 \n 足球球員 : \n \n 簡易組合 : \n \n 說明 : \n 將組合件匯入V-rep，將零件做裝配並給予各部位該有的參數設定(例:轉桿必須為可作動的、球員必須設為可碰撞的，等等)，再加上旋轉軸以及36 mm的足球，旋轉軸設定轉速為100，使球員做最簡單的踢球動作(無法手動控制)。 \n 以下為操作影片 : \n \n 版本二 \n 說明 : 模型與< 版本一 > 一樣，不一樣的地方在於V-rep裡多了一根旋轉軸以及程式碼來控制足球員 \n 以下為操作過程 : \n \n 版本三 \n 組合圖 : \n \n 說明 : 這版本中稍微升級了操縱感的握把，是為了避免下圖情況發生，操縱桿會超出它應有的活動範圍。 \n \n 另外，此版本跟上個版本最大差異在於，新增了另一組操縱桿及球員，可以分別使用"方向件"和"WASD"做控制。 \n 程式碼更改部分如下 : \n W : 87 \n A : 65 \n S : 83 \n D : 68 \n \n 以下為成果展示影片 : \n \n', 'tags': '', 'url': '實習任務二.html'}, {'title': '實習任務三', 'text': '\n \n \n', 'tags': '', 'url': '實習任務三.html'}, {'title': '實習任務四', 'text': '\n \n', 'tags': '', 'url': '實習任務四.html'}, {'title': '實習任務五', 'text': '\n \n', 'tags': '', 'url': '實習任務五.html'}, {'title': '實習任務六', 'text': '\n', 'tags': '', 'url': '實習任務六.html'}, {'title': '個人心得', 'text': '', 'tags': '', 'url': '個人心得.html'}, {'title': '40623153', 'text': 'BubbleRob tutorial心得(40623153) \n 看完了 BubbleRob tutorial 文章，對許多單字都還不太認識，需要花時間去查才能把文章看完，也因為上學期有接觸過英文文章，所以越來越有耐心去解讀文章，雖然要花不少時間在認識單字上，但英文真的是蠻重要的語言，透過多讀多看多聽來增強自己的英文能力，對於自己都是有幫助的，多學語言讓自己變得更加充實，文章內的單字在一般也不常見，但對於以後的課程上，多少會用到這些專有名詞，透過這些文章，慢慢的習慣看英文，加上配合v-rep的實際操作，多少能加深一些印象，也對之後的課程有了很好的幫助。 \n \n', 'tags': '', 'url': '40623153.html'}, {'title': '40423111', 'text': '\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0影片 \n 可攜程式系統 \n V-rep _bubbleRobTutorial \n Vurtualbox虛擬主機 \n Onshape繪製手足球零件 \n 球場  \xa0 \xa0 \xa0 \xa0  球員  \xa0 \xa0 \xa0 \xa0  把手 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 python練習 \n 變數與資料 \n \n 數字，字串的運算 \n \n \n 有序列表的運算 \n \n', 'tags': '', 'url': '40423111.html'}, {'title': '40423142', 'text': '心得   下載可以客製化的可攜系統，透過 python 和 HxD 更改原是可攜系統內部的東西，利用 ungit 管理自己的協同網頁 \n 開始自評、互評，加入分組專題的網頁中，和成員基本互動，開始簡單繪製手足球的各項零件 \n 瞭解利用 ungit 的圖形推送，可以快速登入 \n 了解 VREP 的操作介面和使用方法 \n 重新下載了老師給的可攜環境 \n 根據老師給的網址，深入學習 VREP 的對象關係 \n http://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm \xa0 \n 學習如何利用距離來控制手足球的操作，最終失敗，在網路上找不到相對應的語法，所以使用速度來操作，球員已經可以踢球 \n https://youtu.be/ctShJrjgl2w \n', 'tags': '', 'url': '40423142.html'}, {'title': '40623138', 'text': 'BubbleRob tutorial心得(40623138) \n 做這個 bubbleRob 真的是挑戰英文，慢慢的查單字去做下一步，過程不會很難，可是要很細心去做每個步驟，了解每個更改地方的意思，剛做完的時候發現 Vision_sensor( 視覺傳感器 ) 沒東西，發現位置沒設好而且內容沒有更改完全，後來就有顯示出來了。還有就是接近傳感器的名字跟程式碼內的名字不一樣，導致一開始模擬的時候 bubbleRob 只會往前衝不會反彈，種種的除錯重試，總算完成了。 \n \n \n \n', 'tags': '', 'url': '40623138.html'}, {'title': '40623154', 'text': 'BubbleRob tutorial心得(40623154) \n 透過turorial學習了很多，不管是英文還是v-rep的熟悉度，跟著文章的步驟慢慢完成，雖然有大半的時間都在解讀英文單子，但可以透過這樣的學習方式來提升英文能力，過程不太難需要得很仔細的去理解教學所講的東西，雖然最後還是沒有完整的做出來，但至少比之前熟悉了這個程式，多練習才會進步。 \n \n', 'tags': '', 'url': '40623154.html'}, {'title': '40423214', 'text': 'BubbleRob tutorial心得(40423214) \n \xa0\xa0\xa0 上學期已經有做過一個tutorial的機械手臂練習，所以同樣面對這次的全英文教學步驟或多或少都有些習慣，也漸漸的多了些耐心去讀懂這篇教學，多虧了上學期的練習和自己的摸索，做完這次的小汽車碰撞模擬並不是太困難，跟著文章中的步驟一步一步來就能完成，大部分時間還是花在解讀英文上面，雖然說過程不是太困難，但還是有遇到一些問題 : 按部就班地跟著教學步驟走，該設定的都設定了，該給的程式碼也輸入進去了，但小汽車就是不會避開眼前的障礙物，義無反顧地往前衝，以為是哪個步驟做錯了，重新檢查了一遍，確定步驟都沒錯，才突然發現我每個部件的名稱與程式碼裡的名稱並不完全一樣，更改成一致後就沒問題了，以下為完成影片 : \n \n \n HandSoccer心得(40423214) \n \xa0\xa0\xa0 其實期中之前就有著手進行手足球的V-rep模擬，只是進度過於緩慢，也遲遲沒有把目前做的進度呈現上來，看著別組已經寫好程式能跟電腦對打的"高科技手足球"，再看看自己這邊的手足球，又加上期中考週老師有意無意的給予進度上的壓力，意識到不加緊腳步事不行了，趁機利用期中考後的這段"清閒時光"趕快研究一下這手足球的程式到底都寫了些甚麼。 \n \xa0\xa0\xa0 對於我這程式盲來說，短短5.60行的程式碼我卻花了好一陣子的時間才慢慢地有些許的了解，為了讓兩隻操縱桿能分開控制，我也吃了不少苦頭，參考了第二組同學的網頁，突然發現了這網址"   Unicode"\xa0  突發奇想的用這網址去找了"WASD"的Unicode，稍微更改了原先的程式碼，果不其然終於能夠用"WASD"去控制另一隻操縱桿了!(在此誠摯感謝第二組同學 \n )放上成果影片 : \n \n \n', 'tags': '', 'url': '40423214.html'}, {'title': '40623134', 'text': 'BubbleRob tutorial心得(40623134) \n 對於英文方面的熟悉度，雖然不至於到完全看不懂，但是一篇文章看得東缺西漏的很痛苦，所以藉由這次能熟悉相關的英文單字，能在往後對專題設計能有更大的突破口，更不會在語言方面遇到瓶頸，目前跟著教學文章一字一句的慢慢前進，剛開始心情確實是五味雜陳，因為不懂而帶來的困惑與不耐煩，到完成後透露出的喜悅與興奮感，非常耐人尋味，但那些都只是一部分，重點在於我能(想)走多遠。 \n', 'tags': '', 'url': '40623134.html'}, {'title': '40623131', 'text': 'BubbleRob tutorial心得(40623131) \n BubbleRob tutorial需要去查各個英文單字，透過查詢單字來增強自己的英文能力，熟悉相關英文單字使英文能力更加精進，讓自己對於這門課更加熟悉，文章內的單字很多都是專業用語，跟著文章一步一步慢慢地學習，雖然做的不是很好，但是透過這些文章，加上v-rep的實際操作，才可以在這門課上越走越遠。 \n \n', 'tags': '', 'url': '40623131.html'}, {'title': '40423159', 'text': '個人網站 \xa0 https://40423159.github.io/2019cd/content/index.html \n 個人每週心得都會推送到個人網站上面，並且將自己遇到的問題，如何解決都貼上去。 \n BubbleRob tutorial心得(40423159) \n 這週把BubbleRob tutorial任務製作出來了，也順利讓它跑成功了，雖然過程中遇到不少問題，也利用別人的教學影片看了一次，才慢慢順利做出來，雖然軟體的應用上還不夠成熟，但我希望自己能夠越來越熟練，能將v-rep做得更好，也希望加深自己英文能力，才能夠將文章的內容全看懂。 \n BubbleRob tutorial成功影片 \n 操作影片1 \n 操作影片2 \n 操作影片3 \n', 'tags': '', 'url': '40423159.html'}, {'title': '40623114', 'text': '', 'tags': '', 'url': '40623114.html'}, {'title': 'ungit', 'text': '配置 ungit \n 1. 進入  http://mde.tw/wcm2019/content/實習項目二.html\xa0  ，下載 \xa0 kmol_2019.7z \xa0和  \xa0 nodejs_with_ungit.7z \xa0。 \n \n 2. 兩者分別解開壓縮檔案，然後將 nodejs 放入可攜 data 目錄中。 \n \n 3. 設定命令列搜尋路徑 \n 利用SciTE 編輯器編輯 start_cadlab.bat(及start.bat)。 \n 路徑指令: set path8=%Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm; \n \n 並且將 path8 納入 path 設定 \n \n 4. 設定 USERPROFILE 環境變數 \n \n 5. 若要啟動 ungit，必須使用下列指令: \n ungit --launchBrowser=0 --launchCommand "C:\\PROGRA~2\\Google\\Chrome\\Application\\chrome.exe %%U" \n \n', 'tags': '', 'url': 'ungit.html'}, {'title': 'ungit使用方式', 'text': '\xa0git add . 後使用 ungit \n \n 輸入這次提交的主題後按下commit \n \n 在按一次commit後的分支點擊push \n \n 再輸入使用者帳號密碼後推送完成 \n !!輸入完成後要直接按"Submit"扭，使用鍵盤的"Enter"無法完成!! \n \n', 'tags': '', 'url': 'ungit使用方式.html'}, {'title': 'ungit_user解決方式', 'text': '問題:無法指定user以及email \n \n 解決方式:在home資料夾下新增 \n .gitconfig \n ------------------- \n [name] \n xxxxxxx \n xxxxxxx@gm.nfu.edu.tw \n ------------------- \n', 'tags': '', 'url': 'ungit_user解決方式.html'}, {'title': 'ungit出現分支解決方式', 'text': '如果有人出現如圖的的情況 \n \n 先checkout出分支 \n \n 然後ungit會問你要不要合併 \n 點合併後檢查有沒有衝突再推送即可 \n', 'tags': '', 'url': 'ungit出現分支解決方式.html'}, {'title': '期中報告', 'text': '', 'tags': '', 'url': '期中報告.html'}, {'title': '40623134(期中報告影片)', 'text': '\n', 'tags': '', 'url': '40623134(期中報告影片).html'}, {'title': '40423111(期中報告影片)', 'text': '\n', 'tags': '', 'url': '40423111(期中報告影片).html'}, {'title': '40623138(期中報告影片)', 'text': '\n', 'tags': '', 'url': '40623138(期中報告影片).html'}, {'title': '40623154(期中報告影片)', 'text': '\n', 'tags': '', 'url': '40623154(期中報告影片).html'}, {'title': '40623131(期中報告影片)', 'text': '\n \n', 'tags': '', 'url': '40623131(期中報告影片).html'}, {'title': '40423142(期中報告影片)', 'text': '  下載可以客製化的可攜系統，透過 python 和 HxD 更改原是可攜系統內部的東西，利用 ungit 管理自己的協同網頁 \n 開始自評、互評，加入分組專題的網頁中，和成員基本互動，開始簡單繪製手足球的各項零件 \n 瞭解利用 ungit 的圖形推送，可以快速登入 \n 了解 VREP 的操作介面和使用方法 \n 重新下載了老師給的可攜環境 \n 根據老師給的網址，深入學習 VREP 的對象關係 \n http://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm \xa0 \n 學習如何利用距離來控制手足球的操作，最終失敗，在網路上找不到相對應的語法，所以使用速度來操作，球員已經可以踢球 \n \n', 'tags': '', 'url': '40423142(期中報告影片).html'}, {'title': '40623153(期中報告影片)', 'text': '\n', 'tags': '', 'url': '40623153(期中報告影片).html'}, {'title': '40423214(期中報告影片)', 'text': '\n', 'tags': '', 'url': '40423214(期中報告影片).html'}, {'title': '40423159(期中報告影片)', 'text': '40423159 期中報告影片 \n \n', 'tags': '', 'url': '40423159(期中報告影片).html'}, {'title': '40623114(期中報告影片)', 'text': '\n', 'tags': '', 'url': '40623114(期中報告影片).html'}, {'title': 'Virtualbox', 'text': '下載步驟 \n 近端 ->\xa0 http://wcmg1.kmol.info:88/ \xa0下載\xa0 ub1804_nox.vdi \n \n 遠端 -> https://2019wcm.blogspot.com/ \xa0->\xa0 \xa0 Ubuntu 18.04_201904.vdi \n \n \n', 'tags': '', 'url': 'Virtualbox.html'}, {'title': 'Virtualbox操作影片', 'text': '40423159 Virtualbox操作影片 \n \n 40423142 \n \n 40623153 \n', 'tags': '', 'url': 'Virtualbox操作影片.html'}]};
>>>>>>> 4f1714c47ce018094a32762aadb9c08860dc805d
